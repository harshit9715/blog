name: Deploy to s3 static website

on:
  pull_request:
    branches:
      - static-serve 
  push:
    branches:
      - static-serve 
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Extract branch name
        shell: bash
        run: |
          echo "$(echo ${GITHUB_REF})"
          echo "$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=bucket_name;]$(echo ${GITHUB_REF#refs/heads/})"
#       - name: Dump GitHub context
#         env:
#           GITHUB_CONTEXT: ${{ toJson(github) }}
#         run: |
#           echo "This step is not commented out."
#           # echo "$GITHUB_CONTEXT"
#           echo ${{ github.head_ref }}
#           echo ${{ github.base_ref }}
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: AWS Identity
        run:  aws sts get-caller-identity
      - name: Enable static website
        run: |
          BUCKET_EXISTS=$(aws s3api head-bucket --bucket ${{ format( '{0}-{1}' , secrets.BUCKET_NAME, github.head_ref ) }} 2>&1 || true)
          if [ -z "$BUCKET_EXISTS" ]; then
            echo "Bucket exists"
            if [ ${{ github.event.pull_request.merged }} -eq 'true' ]; then
              aws s3 rb ${{ format( 's3://{0}-{1}', secrets.BUCKET_NAME, github.base_ref ) }} --force
            fi
          else
            echo "Bucket does not exist"
            echo "${{ format( 's3://{0}-{1}', secrets.BUCKET_NAME, github.base_ref ) }}"
            echo "${{ format( 's3://{0}-{1}', secrets.BUCKET_NAME, github.head_ref ) }}"
            # aws s3 mb ${{ format( 's3://{0}-{1}', secrets.BUCKET_NAME, github.head_ref ) }}
            # aws s3 website ${{ format('s3://{0}-{1}/', secrets.BUCKET_NAME, github.head_ref ) }} --index-document index.html --error-document error.html
            # # Need to have "s3_read_policy.json" file in repo under .github folder.
            # cd .github
            # sed -i "${{ format('s/BUCKET_NAME/{0}-{1}/g', secrets.BUCKET_NAME, github.head_ref ) }}" s3_read_policy.json
            # # Need to have this file in repo
            # aws s3api put-bucket-policy --bucket ${{ format('{0}-{1}', secrets.BUCKET_NAME, github.head_ref ) }} --policy file://.github/s3_read_policy.json
            # cd ..
          fi
